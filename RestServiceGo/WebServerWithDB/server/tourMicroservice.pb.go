// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v5.26.1
// source: tourMicroservice.proto

package server

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type TourPreferenceCreationRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId          int64    `protobuf:"varint,1,opt,name=userId,proto3" json:"userId,omitempty"`
	DifficultyLevel int32    `protobuf:"varint,2,opt,name=difficultyLevel,proto3" json:"difficultyLevel,omitempty"`
	WalkingRating   int32    `protobuf:"varint,3,opt,name=walkingRating,proto3" json:"walkingRating,omitempty"`
	CyclingRating   int32    `protobuf:"varint,4,opt,name=cyclingRating,proto3" json:"cyclingRating,omitempty"`
	CarRating       int32    `protobuf:"varint,5,opt,name=carRating,proto3" json:"carRating,omitempty"`
	BoatRating      int32    `protobuf:"varint,6,opt,name=boatRating,proto3" json:"boatRating,omitempty"`
	SelectedTags    []string `protobuf:"bytes,7,rep,name=selectedTags,proto3" json:"selectedTags,omitempty"`
}

func (x *TourPreferenceCreationRequest) Reset() {
	*x = TourPreferenceCreationRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tourMicroservice_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TourPreferenceCreationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TourPreferenceCreationRequest) ProtoMessage() {}

func (x *TourPreferenceCreationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_tourMicroservice_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TourPreferenceCreationRequest.ProtoReflect.Descriptor instead.
func (*TourPreferenceCreationRequest) Descriptor() ([]byte, []int) {
	return file_tourMicroservice_proto_rawDescGZIP(), []int{0}
}

func (x *TourPreferenceCreationRequest) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *TourPreferenceCreationRequest) GetDifficultyLevel() int32 {
	if x != nil {
		return x.DifficultyLevel
	}
	return 0
}

func (x *TourPreferenceCreationRequest) GetWalkingRating() int32 {
	if x != nil {
		return x.WalkingRating
	}
	return 0
}

func (x *TourPreferenceCreationRequest) GetCyclingRating() int32 {
	if x != nil {
		return x.CyclingRating
	}
	return 0
}

func (x *TourPreferenceCreationRequest) GetCarRating() int32 {
	if x != nil {
		return x.CarRating
	}
	return 0
}

func (x *TourPreferenceCreationRequest) GetBoatRating() int32 {
	if x != nil {
		return x.BoatRating
	}
	return 0
}

func (x *TourPreferenceCreationRequest) GetSelectedTags() []string {
	if x != nil {
		return x.SelectedTags
	}
	return nil
}

type TourPreferenceResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id              int64    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	UserId          int64    `protobuf:"varint,2,opt,name=userId,proto3" json:"userId,omitempty"`
	DifficultyLevel int32    `protobuf:"varint,3,opt,name=difficultyLevel,proto3" json:"difficultyLevel,omitempty"`
	WalkingRating   int32    `protobuf:"varint,4,opt,name=walkingRating,proto3" json:"walkingRating,omitempty"`
	CyclingRating   int32    `protobuf:"varint,5,opt,name=cyclingRating,proto3" json:"cyclingRating,omitempty"`
	CarRating       int32    `protobuf:"varint,6,opt,name=carRating,proto3" json:"carRating,omitempty"`
	BoatRating      int32    `protobuf:"varint,7,opt,name=boatRating,proto3" json:"boatRating,omitempty"`
	SelectedTags    []string `protobuf:"bytes,8,rep,name=selectedTags,proto3" json:"selectedTags,omitempty"`
}

func (x *TourPreferenceResponse) Reset() {
	*x = TourPreferenceResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tourMicroservice_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TourPreferenceResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TourPreferenceResponse) ProtoMessage() {}

func (x *TourPreferenceResponse) ProtoReflect() protoreflect.Message {
	mi := &file_tourMicroservice_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TourPreferenceResponse.ProtoReflect.Descriptor instead.
func (*TourPreferenceResponse) Descriptor() ([]byte, []int) {
	return file_tourMicroservice_proto_rawDescGZIP(), []int{1}
}

func (x *TourPreferenceResponse) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *TourPreferenceResponse) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *TourPreferenceResponse) GetDifficultyLevel() int32 {
	if x != nil {
		return x.DifficultyLevel
	}
	return 0
}

func (x *TourPreferenceResponse) GetWalkingRating() int32 {
	if x != nil {
		return x.WalkingRating
	}
	return 0
}

func (x *TourPreferenceResponse) GetCyclingRating() int32 {
	if x != nil {
		return x.CyclingRating
	}
	return 0
}

func (x *TourPreferenceResponse) GetCarRating() int32 {
	if x != nil {
		return x.CarRating
	}
	return 0
}

func (x *TourPreferenceResponse) GetBoatRating() int32 {
	if x != nil {
		return x.BoatRating
	}
	return 0
}

func (x *TourPreferenceResponse) GetSelectedTags() []string {
	if x != nil {
		return x.SelectedTags
	}
	return nil
}

type TourPreferenceIdRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId int64 `protobuf:"varint,1,opt,name=userId,proto3" json:"userId,omitempty"`
}

func (x *TourPreferenceIdRequest) Reset() {
	*x = TourPreferenceIdRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tourMicroservice_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TourPreferenceIdRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TourPreferenceIdRequest) ProtoMessage() {}

func (x *TourPreferenceIdRequest) ProtoReflect() protoreflect.Message {
	mi := &file_tourMicroservice_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TourPreferenceIdRequest.ProtoReflect.Descriptor instead.
func (*TourPreferenceIdRequest) Descriptor() ([]byte, []int) {
	return file_tourMicroservice_proto_rawDescGZIP(), []int{2}
}

func (x *TourPreferenceIdRequest) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

type FacilityCreationRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name        string  `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Description string  `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	ImagePath   string  `protobuf:"bytes,3,opt,name=imagePath,proto3" json:"imagePath,omitempty"`
	AuthorId    int64   `protobuf:"varint,4,opt,name=authorId,proto3" json:"authorId,omitempty"`
	Category    int64   `protobuf:"varint,5,opt,name=category,proto3" json:"category,omitempty"`
	Longitude   float32 `protobuf:"fixed32,6,opt,name=longitude,proto3" json:"longitude,omitempty"`
	Latitude    float32 `protobuf:"fixed32,7,opt,name=latitude,proto3" json:"latitude,omitempty"`
}

func (x *FacilityCreationRequest) Reset() {
	*x = FacilityCreationRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tourMicroservice_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FacilityCreationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FacilityCreationRequest) ProtoMessage() {}

func (x *FacilityCreationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_tourMicroservice_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FacilityCreationRequest.ProtoReflect.Descriptor instead.
func (*FacilityCreationRequest) Descriptor() ([]byte, []int) {
	return file_tourMicroservice_proto_rawDescGZIP(), []int{3}
}

func (x *FacilityCreationRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *FacilityCreationRequest) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *FacilityCreationRequest) GetImagePath() string {
	if x != nil {
		return x.ImagePath
	}
	return ""
}

func (x *FacilityCreationRequest) GetAuthorId() int64 {
	if x != nil {
		return x.AuthorId
	}
	return 0
}

func (x *FacilityCreationRequest) GetCategory() int64 {
	if x != nil {
		return x.Category
	}
	return 0
}

func (x *FacilityCreationRequest) GetLongitude() float32 {
	if x != nil {
		return x.Longitude
	}
	return 0
}

func (x *FacilityCreationRequest) GetLatitude() float32 {
	if x != nil {
		return x.Latitude
	}
	return 0
}

type FacilityResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          int64   `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name        string  `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Description string  `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	ImagePath   string  `protobuf:"bytes,4,opt,name=imagePath,proto3" json:"imagePath,omitempty"`
	AuthorId    int64   `protobuf:"varint,5,opt,name=authorId,proto3" json:"authorId,omitempty"`
	Category    int32   `protobuf:"varint,6,opt,name=category,proto3" json:"category,omitempty"`
	Longitude   float32 `protobuf:"fixed32,7,opt,name=longitude,proto3" json:"longitude,omitempty"`
	Latitude    float32 `protobuf:"fixed32,8,opt,name=latitude,proto3" json:"latitude,omitempty"`
}

func (x *FacilityResponse) Reset() {
	*x = FacilityResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tourMicroservice_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FacilityResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FacilityResponse) ProtoMessage() {}

func (x *FacilityResponse) ProtoReflect() protoreflect.Message {
	mi := &file_tourMicroservice_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FacilityResponse.ProtoReflect.Descriptor instead.
func (*FacilityResponse) Descriptor() ([]byte, []int) {
	return file_tourMicroservice_proto_rawDescGZIP(), []int{4}
}

func (x *FacilityResponse) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *FacilityResponse) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *FacilityResponse) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *FacilityResponse) GetImagePath() string {
	if x != nil {
		return x.ImagePath
	}
	return ""
}

func (x *FacilityResponse) GetAuthorId() int64 {
	if x != nil {
		return x.AuthorId
	}
	return 0
}

func (x *FacilityResponse) GetCategory() int32 {
	if x != nil {
		return x.Category
	}
	return 0
}

func (x *FacilityResponse) GetLongitude() float32 {
	if x != nil {
		return x.Longitude
	}
	return 0
}

func (x *FacilityResponse) GetLatitude() float32 {
	if x != nil {
		return x.Latitude
	}
	return 0
}

type FacilitiesIdRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AuthorId int64 `protobuf:"varint,1,opt,name=authorId,proto3" json:"authorId,omitempty"`
}

func (x *FacilitiesIdRequest) Reset() {
	*x = FacilitiesIdRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tourMicroservice_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FacilitiesIdRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FacilitiesIdRequest) ProtoMessage() {}

func (x *FacilitiesIdRequest) ProtoReflect() protoreflect.Message {
	mi := &file_tourMicroservice_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FacilitiesIdRequest.ProtoReflect.Descriptor instead.
func (*FacilitiesIdRequest) Descriptor() ([]byte, []int) {
	return file_tourMicroservice_proto_rawDescGZIP(), []int{5}
}

func (x *FacilitiesIdRequest) GetAuthorId() int64 {
	if x != nil {
		return x.AuthorId
	}
	return 0
}

type FacilityListResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Facilities []*FacilityResponse `protobuf:"bytes,1,rep,name=facilities,proto3" json:"facilities,omitempty"`
}

func (x *FacilityListResponse) Reset() {
	*x = FacilityListResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tourMicroservice_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FacilityListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FacilityListResponse) ProtoMessage() {}

func (x *FacilityListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_tourMicroservice_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FacilityListResponse.ProtoReflect.Descriptor instead.
func (*FacilityListResponse) Descriptor() ([]byte, []int) {
	return file_tourMicroservice_proto_rawDescGZIP(), []int{6}
}

func (x *FacilityListResponse) GetFacilities() []*FacilityResponse {
	if x != nil {
		return x.Facilities
	}
	return nil
}

type KeyPointCreationRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TourId          int64                          `protobuf:"varint,1,opt,name=tourId,proto3" json:"tourId,omitempty"`
	Name            string                         `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Description     string                         `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	Longitude       float32                        `protobuf:"fixed32,4,opt,name=longitude,proto3" json:"longitude,omitempty"`
	Latitude        float32                        `protobuf:"fixed32,5,opt,name=latitude,proto3" json:"latitude,omitempty"`
	LocationAddress string                         `protobuf:"bytes,6,opt,name=locationAddress,proto3" json:"locationAddress,omitempty"`
	ImagePath       string                         `protobuf:"bytes,7,opt,name=imagePath,proto3" json:"imagePath,omitempty"`
	Order           int32                          `protobuf:"varint,8,opt,name=order,proto3" json:"order,omitempty"`
	Secret          *KeyPointSecretCreationRequest `protobuf:"bytes,9,opt,name=secret,proto3" json:"secret,omitempty"`
}

func (x *KeyPointCreationRequest) Reset() {
	*x = KeyPointCreationRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tourMicroservice_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *KeyPointCreationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KeyPointCreationRequest) ProtoMessage() {}

func (x *KeyPointCreationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_tourMicroservice_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KeyPointCreationRequest.ProtoReflect.Descriptor instead.
func (*KeyPointCreationRequest) Descriptor() ([]byte, []int) {
	return file_tourMicroservice_proto_rawDescGZIP(), []int{7}
}

func (x *KeyPointCreationRequest) GetTourId() int64 {
	if x != nil {
		return x.TourId
	}
	return 0
}

func (x *KeyPointCreationRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *KeyPointCreationRequest) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *KeyPointCreationRequest) GetLongitude() float32 {
	if x != nil {
		return x.Longitude
	}
	return 0
}

func (x *KeyPointCreationRequest) GetLatitude() float32 {
	if x != nil {
		return x.Latitude
	}
	return 0
}

func (x *KeyPointCreationRequest) GetLocationAddress() string {
	if x != nil {
		return x.LocationAddress
	}
	return ""
}

func (x *KeyPointCreationRequest) GetImagePath() string {
	if x != nil {
		return x.ImagePath
	}
	return ""
}

func (x *KeyPointCreationRequest) GetOrder() int32 {
	if x != nil {
		return x.Order
	}
	return 0
}

func (x *KeyPointCreationRequest) GetSecret() *KeyPointSecretCreationRequest {
	if x != nil {
		return x.Secret
	}
	return nil
}

type KeyPointSecretCreationRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Images      []string `protobuf:"bytes,1,rep,name=images,proto3" json:"images,omitempty"`
	Description string   `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
}

func (x *KeyPointSecretCreationRequest) Reset() {
	*x = KeyPointSecretCreationRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tourMicroservice_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *KeyPointSecretCreationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KeyPointSecretCreationRequest) ProtoMessage() {}

func (x *KeyPointSecretCreationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_tourMicroservice_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KeyPointSecretCreationRequest.ProtoReflect.Descriptor instead.
func (*KeyPointSecretCreationRequest) Descriptor() ([]byte, []int) {
	return file_tourMicroservice_proto_rawDescGZIP(), []int{8}
}

func (x *KeyPointSecretCreationRequest) GetImages() []string {
	if x != nil {
		return x.Images
	}
	return nil
}

func (x *KeyPointSecretCreationRequest) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type KeyPointResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id              int64                   `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	TourId          int64                   `protobuf:"varint,2,opt,name=tourId,proto3" json:"tourId,omitempty"`
	Name            string                  `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	Description     string                  `protobuf:"bytes,4,opt,name=description,proto3" json:"description,omitempty"`
	Longitude       float32                 `protobuf:"fixed32,5,opt,name=longitude,proto3" json:"longitude,omitempty"`
	Latitude        float32                 `protobuf:"fixed32,6,opt,name=latitude,proto3" json:"latitude,omitempty"`
	LocationAddress string                  `protobuf:"bytes,7,opt,name=locationAddress,proto3" json:"locationAddress,omitempty"`
	ImagePath       string                  `protobuf:"bytes,8,opt,name=imagePath,proto3" json:"imagePath,omitempty"`
	Order           int32                   `protobuf:"varint,9,opt,name=order,proto3" json:"order,omitempty"`
	HaveSecret      bool                    `protobuf:"varint,10,opt,name=haveSecret,proto3" json:"haveSecret,omitempty"`
	Secret          *KeyPointSecretResponse `protobuf:"bytes,11,opt,name=secret,proto3" json:"secret,omitempty"`
}

func (x *KeyPointResponse) Reset() {
	*x = KeyPointResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tourMicroservice_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *KeyPointResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KeyPointResponse) ProtoMessage() {}

func (x *KeyPointResponse) ProtoReflect() protoreflect.Message {
	mi := &file_tourMicroservice_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KeyPointResponse.ProtoReflect.Descriptor instead.
func (*KeyPointResponse) Descriptor() ([]byte, []int) {
	return file_tourMicroservice_proto_rawDescGZIP(), []int{9}
}

func (x *KeyPointResponse) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *KeyPointResponse) GetTourId() int64 {
	if x != nil {
		return x.TourId
	}
	return 0
}

func (x *KeyPointResponse) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *KeyPointResponse) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *KeyPointResponse) GetLongitude() float32 {
	if x != nil {
		return x.Longitude
	}
	return 0
}

func (x *KeyPointResponse) GetLatitude() float32 {
	if x != nil {
		return x.Latitude
	}
	return 0
}

func (x *KeyPointResponse) GetLocationAddress() string {
	if x != nil {
		return x.LocationAddress
	}
	return ""
}

func (x *KeyPointResponse) GetImagePath() string {
	if x != nil {
		return x.ImagePath
	}
	return ""
}

func (x *KeyPointResponse) GetOrder() int32 {
	if x != nil {
		return x.Order
	}
	return 0
}

func (x *KeyPointResponse) GetHaveSecret() bool {
	if x != nil {
		return x.HaveSecret
	}
	return false
}

func (x *KeyPointResponse) GetSecret() *KeyPointSecretResponse {
	if x != nil {
		return x.Secret
	}
	return nil
}

type KeyPointSecretResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Images      []string `protobuf:"bytes,1,rep,name=images,proto3" json:"images,omitempty"`
	Description string   `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
}

func (x *KeyPointSecretResponse) Reset() {
	*x = KeyPointSecretResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tourMicroservice_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *KeyPointSecretResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KeyPointSecretResponse) ProtoMessage() {}

func (x *KeyPointSecretResponse) ProtoReflect() protoreflect.Message {
	mi := &file_tourMicroservice_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KeyPointSecretResponse.ProtoReflect.Descriptor instead.
func (*KeyPointSecretResponse) Descriptor() ([]byte, []int) {
	return file_tourMicroservice_proto_rawDescGZIP(), []int{10}
}

func (x *KeyPointSecretResponse) GetImages() []string {
	if x != nil {
		return x.Images
	}
	return nil
}

func (x *KeyPointSecretResponse) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type KeyPointsIdRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TourId int64 `protobuf:"varint,1,opt,name=tourId,proto3" json:"tourId,omitempty"`
}

func (x *KeyPointsIdRequest) Reset() {
	*x = KeyPointsIdRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tourMicroservice_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *KeyPointsIdRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KeyPointsIdRequest) ProtoMessage() {}

func (x *KeyPointsIdRequest) ProtoReflect() protoreflect.Message {
	mi := &file_tourMicroservice_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KeyPointsIdRequest.ProtoReflect.Descriptor instead.
func (*KeyPointsIdRequest) Descriptor() ([]byte, []int) {
	return file_tourMicroservice_proto_rawDescGZIP(), []int{11}
}

func (x *KeyPointsIdRequest) GetTourId() int64 {
	if x != nil {
		return x.TourId
	}
	return 0
}

type KeyPointListResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	KeyPoints []*KeyPointResponse `protobuf:"bytes,1,rep,name=keyPoints,proto3" json:"keyPoints,omitempty"`
}

func (x *KeyPointListResponse) Reset() {
	*x = KeyPointListResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tourMicroservice_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *KeyPointListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KeyPointListResponse) ProtoMessage() {}

func (x *KeyPointListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_tourMicroservice_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KeyPointListResponse.ProtoReflect.Descriptor instead.
func (*KeyPointListResponse) Descriptor() ([]byte, []int) {
	return file_tourMicroservice_proto_rawDescGZIP(), []int{12}
}

func (x *KeyPointListResponse) GetKeyPoints() []*KeyPointResponse {
	if x != nil {
		return x.KeyPoints
	}
	return nil
}

type KeyPointIdRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *KeyPointIdRequest) Reset() {
	*x = KeyPointIdRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tourMicroservice_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *KeyPointIdRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KeyPointIdRequest) ProtoMessage() {}

func (x *KeyPointIdRequest) ProtoReflect() protoreflect.Message {
	mi := &file_tourMicroservice_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KeyPointIdRequest.ProtoReflect.Descriptor instead.
func (*KeyPointIdRequest) Descriptor() ([]byte, []int) {
	return file_tourMicroservice_proto_rawDescGZIP(), []int{13}
}

func (x *KeyPointIdRequest) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type TourCreationRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          int64    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	AuthorId    int64    `protobuf:"varint,2,opt,name=authorId,proto3" json:"authorId,omitempty"`
	Name        string   `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	Description string   `protobuf:"bytes,4,opt,name=description,proto3" json:"description,omitempty"`
	Difficulty  int32    `protobuf:"varint,5,opt,name=difficulty,proto3" json:"difficulty,omitempty"`
	Tags        []string `protobuf:"bytes,6,rep,name=tags,proto3" json:"tags,omitempty"`
	Status      int32    `protobuf:"varint,7,opt,name=status,proto3" json:"status,omitempty"`
	Price       float32  `protobuf:"fixed32,8,opt,name=price,proto3" json:"price,omitempty"`
	IsDeleted   bool     `protobuf:"varint,9,opt,name=isDeleted,proto3" json:"isDeleted,omitempty"`
	Distance    float32  `protobuf:"fixed32,10,opt,name=distance,proto3" json:"distance,omitempty"`
	Category    int32    `protobuf:"varint,11,opt,name=category,proto3" json:"category,omitempty"`
}

func (x *TourCreationRequest) Reset() {
	*x = TourCreationRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tourMicroservice_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TourCreationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TourCreationRequest) ProtoMessage() {}

func (x *TourCreationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_tourMicroservice_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TourCreationRequest.ProtoReflect.Descriptor instead.
func (*TourCreationRequest) Descriptor() ([]byte, []int) {
	return file_tourMicroservice_proto_rawDescGZIP(), []int{14}
}

func (x *TourCreationRequest) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *TourCreationRequest) GetAuthorId() int64 {
	if x != nil {
		return x.AuthorId
	}
	return 0
}

func (x *TourCreationRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *TourCreationRequest) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *TourCreationRequest) GetDifficulty() int32 {
	if x != nil {
		return x.Difficulty
	}
	return 0
}

func (x *TourCreationRequest) GetTags() []string {
	if x != nil {
		return x.Tags
	}
	return nil
}

func (x *TourCreationRequest) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *TourCreationRequest) GetPrice() float32 {
	if x != nil {
		return x.Price
	}
	return 0
}

func (x *TourCreationRequest) GetIsDeleted() bool {
	if x != nil {
		return x.IsDeleted
	}
	return false
}

func (x *TourCreationRequest) GetDistance() float32 {
	if x != nil {
		return x.Distance
	}
	return 0
}

func (x *TourCreationRequest) GetCategory() int32 {
	if x != nil {
		return x.Category
	}
	return 0
}

type TourResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id            int64                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	AuthorId      int64                  `protobuf:"varint,2,opt,name=authorId,proto3" json:"authorId,omitempty"`
	Name          string                 `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	Description   string                 `protobuf:"bytes,4,opt,name=description,proto3" json:"description,omitempty"`
	Difficulty    int32                  `protobuf:"varint,5,opt,name=difficulty,proto3" json:"difficulty,omitempty"`
	Tags          []string               `protobuf:"bytes,6,rep,name=tags,proto3" json:"tags,omitempty"`
	Status        int32                  `protobuf:"varint,7,opt,name=status,proto3" json:"status,omitempty"`
	Price         float32                `protobuf:"fixed32,8,opt,name=price,proto3" json:"price,omitempty"`
	IsDeleted     bool                   `protobuf:"varint,9,opt,name=isDeleted,proto3" json:"isDeleted,omitempty"`
	Distance      float32                `protobuf:"fixed32,10,opt,name=distance,proto3" json:"distance,omitempty"`
	PublishDate   *timestamppb.Timestamp `protobuf:"bytes,11,opt,name=publishDate,proto3" json:"publishDate,omitempty"`
	ArchiveDate   *timestamppb.Timestamp `protobuf:"bytes,12,opt,name=archiveDate,proto3" json:"archiveDate,omitempty"`
	Category      int32                  `protobuf:"varint,13,opt,name=category,proto3" json:"category,omitempty"`
	AverageRating float32                `protobuf:"fixed32,14,opt,name=averageRating,proto3" json:"averageRating,omitempty"`
	Equipment     []*EquipmentResponse   `protobuf:"bytes,15,rep,name=equipment,proto3" json:"equipment,omitempty"`
}

func (x *TourResponse) Reset() {
	*x = TourResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tourMicroservice_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TourResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TourResponse) ProtoMessage() {}

func (x *TourResponse) ProtoReflect() protoreflect.Message {
	mi := &file_tourMicroservice_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TourResponse.ProtoReflect.Descriptor instead.
func (*TourResponse) Descriptor() ([]byte, []int) {
	return file_tourMicroservice_proto_rawDescGZIP(), []int{15}
}

func (x *TourResponse) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *TourResponse) GetAuthorId() int64 {
	if x != nil {
		return x.AuthorId
	}
	return 0
}

func (x *TourResponse) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *TourResponse) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *TourResponse) GetDifficulty() int32 {
	if x != nil {
		return x.Difficulty
	}
	return 0
}

func (x *TourResponse) GetTags() []string {
	if x != nil {
		return x.Tags
	}
	return nil
}

func (x *TourResponse) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *TourResponse) GetPrice() float32 {
	if x != nil {
		return x.Price
	}
	return 0
}

func (x *TourResponse) GetIsDeleted() bool {
	if x != nil {
		return x.IsDeleted
	}
	return false
}

func (x *TourResponse) GetDistance() float32 {
	if x != nil {
		return x.Distance
	}
	return 0
}

func (x *TourResponse) GetPublishDate() *timestamppb.Timestamp {
	if x != nil {
		return x.PublishDate
	}
	return nil
}

func (x *TourResponse) GetArchiveDate() *timestamppb.Timestamp {
	if x != nil {
		return x.ArchiveDate
	}
	return nil
}

func (x *TourResponse) GetCategory() int32 {
	if x != nil {
		return x.Category
	}
	return 0
}

func (x *TourResponse) GetAverageRating() float32 {
	if x != nil {
		return x.AverageRating
	}
	return 0
}

func (x *TourResponse) GetEquipment() []*EquipmentResponse {
	if x != nil {
		return x.Equipment
	}
	return nil
}

type ToursIdRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AuthorId int64 `protobuf:"varint,1,opt,name=authorId,proto3" json:"authorId,omitempty"`
}

func (x *ToursIdRequest) Reset() {
	*x = ToursIdRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tourMicroservice_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ToursIdRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ToursIdRequest) ProtoMessage() {}

func (x *ToursIdRequest) ProtoReflect() protoreflect.Message {
	mi := &file_tourMicroservice_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ToursIdRequest.ProtoReflect.Descriptor instead.
func (*ToursIdRequest) Descriptor() ([]byte, []int) {
	return file_tourMicroservice_proto_rawDescGZIP(), []int{16}
}

func (x *ToursIdRequest) GetAuthorId() int64 {
	if x != nil {
		return x.AuthorId
	}
	return 0
}

type TourListResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Tours []*TourResponse `protobuf:"bytes,1,rep,name=tours,proto3" json:"tours,omitempty"`
}

func (x *TourListResponse) Reset() {
	*x = TourListResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tourMicroservice_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TourListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TourListResponse) ProtoMessage() {}

func (x *TourListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_tourMicroservice_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TourListResponse.ProtoReflect.Descriptor instead.
func (*TourListResponse) Descriptor() ([]byte, []int) {
	return file_tourMicroservice_proto_rawDescGZIP(), []int{17}
}

func (x *TourListResponse) GetTours() []*TourResponse {
	if x != nil {
		return x.Tours
	}
	return nil
}

type TourIdRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *TourIdRequest) Reset() {
	*x = TourIdRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tourMicroservice_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TourIdRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TourIdRequest) ProtoMessage() {}

func (x *TourIdRequest) ProtoReflect() protoreflect.Message {
	mi := &file_tourMicroservice_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TourIdRequest.ProtoReflect.Descriptor instead.
func (*TourIdRequest) Descriptor() ([]byte, []int) {
	return file_tourMicroservice_proto_rawDescGZIP(), []int{18}
}

func (x *TourIdRequest) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type TourEquipmentCreationRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TourId      int64 `protobuf:"varint,1,opt,name=tourId,proto3" json:"tourId,omitempty"`
	EquipmentId int64 `protobuf:"varint,2,opt,name=equipmentId,proto3" json:"equipmentId,omitempty"`
}

func (x *TourEquipmentCreationRequest) Reset() {
	*x = TourEquipmentCreationRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tourMicroservice_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TourEquipmentCreationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TourEquipmentCreationRequest) ProtoMessage() {}

func (x *TourEquipmentCreationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_tourMicroservice_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TourEquipmentCreationRequest.ProtoReflect.Descriptor instead.
func (*TourEquipmentCreationRequest) Descriptor() ([]byte, []int) {
	return file_tourMicroservice_proto_rawDescGZIP(), []int{19}
}

func (x *TourEquipmentCreationRequest) GetTourId() int64 {
	if x != nil {
		return x.TourId
	}
	return 0
}

func (x *TourEquipmentCreationRequest) GetEquipmentId() int64 {
	if x != nil {
		return x.EquipmentId
	}
	return 0
}

type EquipmentIdRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *EquipmentIdRequest) Reset() {
	*x = EquipmentIdRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tourMicroservice_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EquipmentIdRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EquipmentIdRequest) ProtoMessage() {}

func (x *EquipmentIdRequest) ProtoReflect() protoreflect.Message {
	mi := &file_tourMicroservice_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EquipmentIdRequest.ProtoReflect.Descriptor instead.
func (*EquipmentIdRequest) Descriptor() ([]byte, []int) {
	return file_tourMicroservice_proto_rawDescGZIP(), []int{20}
}

func (x *EquipmentIdRequest) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type TourEquipmentListIdRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TourId int64 `protobuf:"varint,1,opt,name=tourId,proto3" json:"tourId,omitempty"`
}

func (x *TourEquipmentListIdRequest) Reset() {
	*x = TourEquipmentListIdRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tourMicroservice_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TourEquipmentListIdRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TourEquipmentListIdRequest) ProtoMessage() {}

func (x *TourEquipmentListIdRequest) ProtoReflect() protoreflect.Message {
	mi := &file_tourMicroservice_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TourEquipmentListIdRequest.ProtoReflect.Descriptor instead.
func (*TourEquipmentListIdRequest) Descriptor() ([]byte, []int) {
	return file_tourMicroservice_proto_rawDescGZIP(), []int{21}
}

func (x *TourEquipmentListIdRequest) GetTourId() int64 {
	if x != nil {
		return x.TourId
	}
	return 0
}

type EquipmentListResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Equipment []*EquipmentResponse `protobuf:"bytes,1,rep,name=equipment,proto3" json:"equipment,omitempty"`
}

func (x *EquipmentListResponse) Reset() {
	*x = EquipmentListResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tourMicroservice_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EquipmentListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EquipmentListResponse) ProtoMessage() {}

func (x *EquipmentListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_tourMicroservice_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EquipmentListResponse.ProtoReflect.Descriptor instead.
func (*EquipmentListResponse) Descriptor() ([]byte, []int) {
	return file_tourMicroservice_proto_rawDescGZIP(), []int{22}
}

func (x *EquipmentListResponse) GetEquipment() []*EquipmentResponse {
	if x != nil {
		return x.Equipment
	}
	return nil
}

type EquipmentCreationRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name        string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Description string `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
}

func (x *EquipmentCreationRequest) Reset() {
	*x = EquipmentCreationRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tourMicroservice_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EquipmentCreationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EquipmentCreationRequest) ProtoMessage() {}

func (x *EquipmentCreationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_tourMicroservice_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EquipmentCreationRequest.ProtoReflect.Descriptor instead.
func (*EquipmentCreationRequest) Descriptor() ([]byte, []int) {
	return file_tourMicroservice_proto_rawDescGZIP(), []int{23}
}

func (x *EquipmentCreationRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *EquipmentCreationRequest) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type EquipmentResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name        string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Description string `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
}

func (x *EquipmentResponse) Reset() {
	*x = EquipmentResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tourMicroservice_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EquipmentResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EquipmentResponse) ProtoMessage() {}

func (x *EquipmentResponse) ProtoReflect() protoreflect.Message {
	mi := &file_tourMicroservice_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EquipmentResponse.ProtoReflect.Descriptor instead.
func (*EquipmentResponse) Descriptor() ([]byte, []int) {
	return file_tourMicroservice_proto_rawDescGZIP(), []int{24}
}

func (x *EquipmentResponse) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *EquipmentResponse) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *EquipmentResponse) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type TourEquipmentDeletionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TourId      int64 `protobuf:"varint,1,opt,name=tourId,proto3" json:"tourId,omitempty"`
	EquipmentId int64 `protobuf:"varint,2,opt,name=equipmentId,proto3" json:"equipmentId,omitempty"`
}

func (x *TourEquipmentDeletionRequest) Reset() {
	*x = TourEquipmentDeletionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tourMicroservice_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TourEquipmentDeletionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TourEquipmentDeletionRequest) ProtoMessage() {}

func (x *TourEquipmentDeletionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_tourMicroservice_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TourEquipmentDeletionRequest.ProtoReflect.Descriptor instead.
func (*TourEquipmentDeletionRequest) Descriptor() ([]byte, []int) {
	return file_tourMicroservice_proto_rawDescGZIP(), []int{25}
}

func (x *TourEquipmentDeletionRequest) GetTourId() int64 {
	if x != nil {
		return x.TourId
	}
	return 0
}

func (x *TourEquipmentDeletionRequest) GetEquipmentId() int64 {
	if x != nil {
		return x.EquipmentId
	}
	return 0
}

type Empty struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Empty) Reset() {
	*x = Empty{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tourMicroservice_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Empty) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Empty) ProtoMessage() {}

func (x *Empty) ProtoReflect() protoreflect.Message {
	mi := &file_tourMicroservice_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Empty.ProtoReflect.Descriptor instead.
func (*Empty) Descriptor() ([]byte, []int) {
	return file_tourMicroservice_proto_rawDescGZIP(), []int{26}
}

var File_tourMicroservice_proto protoreflect.FileDescriptor

var file_tourMicroservice_proto_rawDesc = []byte{
	0x0a, 0x16, 0x74, 0x6f, 0x75, 0x72, 0x4d, 0x69, 0x63, 0x72, 0x6f, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x06, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72,
	0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x22, 0x8f, 0x02, 0x0a, 0x1d, 0x54, 0x6f, 0x75, 0x72, 0x50, 0x72, 0x65, 0x66, 0x65, 0x72,
	0x65, 0x6e, 0x63, 0x65, 0x43, 0x72, 0x65, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x28, 0x0a, 0x0f, 0x64,
	0x69, 0x66, 0x66, 0x69, 0x63, 0x75, 0x6c, 0x74, 0x79, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x0f, 0x64, 0x69, 0x66, 0x66, 0x69, 0x63, 0x75, 0x6c, 0x74, 0x79,
	0x4c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x24, 0x0a, 0x0d, 0x77, 0x61, 0x6c, 0x6b, 0x69, 0x6e, 0x67,
	0x52, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0d, 0x77, 0x61,
	0x6c, 0x6b, 0x69, 0x6e, 0x67, 0x52, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x12, 0x24, 0x0a, 0x0d, 0x63,
	0x79, 0x63, 0x6c, 0x69, 0x6e, 0x67, 0x52, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x0d, 0x63, 0x79, 0x63, 0x6c, 0x69, 0x6e, 0x67, 0x52, 0x61, 0x74, 0x69, 0x6e,
	0x67, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x61, 0x72, 0x52, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x63, 0x61, 0x72, 0x52, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x12,
	0x1e, 0x0a, 0x0a, 0x62, 0x6f, 0x61, 0x74, 0x52, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x0a, 0x62, 0x6f, 0x61, 0x74, 0x52, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x12,
	0x22, 0x0a, 0x0c, 0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x65, 0x64, 0x54, 0x61, 0x67, 0x73, 0x18,
	0x07, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0c, 0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x65, 0x64, 0x54,
	0x61, 0x67, 0x73, 0x22, 0x98, 0x02, 0x0a, 0x16, 0x54, 0x6f, 0x75, 0x72, 0x50, 0x72, 0x65, 0x66,
	0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x16,
	0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06,
	0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x28, 0x0a, 0x0f, 0x64, 0x69, 0x66, 0x66, 0x69, 0x63,
	0x75, 0x6c, 0x74, 0x79, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x0f, 0x64, 0x69, 0x66, 0x66, 0x69, 0x63, 0x75, 0x6c, 0x74, 0x79, 0x4c, 0x65, 0x76, 0x65, 0x6c,
	0x12, 0x24, 0x0a, 0x0d, 0x77, 0x61, 0x6c, 0x6b, 0x69, 0x6e, 0x67, 0x52, 0x61, 0x74, 0x69, 0x6e,
	0x67, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0d, 0x77, 0x61, 0x6c, 0x6b, 0x69, 0x6e, 0x67,
	0x52, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x12, 0x24, 0x0a, 0x0d, 0x63, 0x79, 0x63, 0x6c, 0x69, 0x6e,
	0x67, 0x52, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0d, 0x63,
	0x79, 0x63, 0x6c, 0x69, 0x6e, 0x67, 0x52, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x12, 0x1c, 0x0a, 0x09,
	0x63, 0x61, 0x72, 0x52, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x09, 0x63, 0x61, 0x72, 0x52, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x12, 0x1e, 0x0a, 0x0a, 0x62, 0x6f,
	0x61, 0x74, 0x52, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a,
	0x62, 0x6f, 0x61, 0x74, 0x52, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x12, 0x22, 0x0a, 0x0c, 0x73, 0x65,
	0x6c, 0x65, 0x63, 0x74, 0x65, 0x64, 0x54, 0x61, 0x67, 0x73, 0x18, 0x08, 0x20, 0x03, 0x28, 0x09,
	0x52, 0x0c, 0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x65, 0x64, 0x54, 0x61, 0x67, 0x73, 0x22, 0x31,
	0x0a, 0x17, 0x54, 0x6f, 0x75, 0x72, 0x50, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65,
	0x49, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65,
	0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49,
	0x64, 0x22, 0xdf, 0x01, 0x0a, 0x17, 0x46, 0x61, 0x63, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x1c, 0x0a, 0x09, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x50, 0x61, 0x74, 0x68,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x50, 0x61, 0x74,
	0x68, 0x12, 0x1a, 0x0a, 0x08, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x49, 0x64, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x08, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x49, 0x64, 0x12, 0x1a, 0x0a,
	0x08, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x08, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x12, 0x1c, 0x0a, 0x09, 0x6c, 0x6f, 0x6e,
	0x67, 0x69, 0x74, 0x75, 0x64, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x02, 0x52, 0x09, 0x6c, 0x6f,
	0x6e, 0x67, 0x69, 0x74, 0x75, 0x64, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x61, 0x74, 0x69, 0x74,
	0x75, 0x64, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x02, 0x52, 0x08, 0x6c, 0x61, 0x74, 0x69, 0x74,
	0x75, 0x64, 0x65, 0x22, 0xe8, 0x01, 0x0a, 0x10, 0x46, 0x61, 0x63, 0x69, 0x6c, 0x69, 0x74, 0x79,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b,
	0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1c,
	0x0a, 0x09, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x50, 0x61, 0x74, 0x68, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x50, 0x61, 0x74, 0x68, 0x12, 0x1a, 0x0a, 0x08,
	0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x49, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08,
	0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x61, 0x74, 0x65,
	0x67, 0x6f, 0x72, 0x79, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x63, 0x61, 0x74, 0x65,
	0x67, 0x6f, 0x72, 0x79, 0x12, 0x1c, 0x0a, 0x09, 0x6c, 0x6f, 0x6e, 0x67, 0x69, 0x74, 0x75, 0x64,
	0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x02, 0x52, 0x09, 0x6c, 0x6f, 0x6e, 0x67, 0x69, 0x74, 0x75,
	0x64, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x61, 0x74, 0x69, 0x74, 0x75, 0x64, 0x65, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x02, 0x52, 0x08, 0x6c, 0x61, 0x74, 0x69, 0x74, 0x75, 0x64, 0x65, 0x22, 0x31,
	0x0a, 0x13, 0x46, 0x61, 0x63, 0x69, 0x6c, 0x69, 0x74, 0x69, 0x65, 0x73, 0x49, 0x64, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x49,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x49,
	0x64, 0x22, 0x50, 0x0a, 0x14, 0x46, 0x61, 0x63, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x4c, 0x69, 0x73,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x38, 0x0a, 0x0a, 0x66, 0x61, 0x63,
	0x69, 0x6c, 0x69, 0x74, 0x69, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x18, 0x2e,
	0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x46, 0x61, 0x63, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x0a, 0x66, 0x61, 0x63, 0x69, 0x6c, 0x69, 0x74,
	0x69, 0x65, 0x73, 0x22, 0xbe, 0x02, 0x0a, 0x17, 0x4b, 0x65, 0x79, 0x50, 0x6f, 0x69, 0x6e, 0x74,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x16, 0x0a, 0x06, 0x74, 0x6f, 0x75, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x06, 0x74, 0x6f, 0x75, 0x72, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64,
	0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1c, 0x0a,
	0x09, 0x6c, 0x6f, 0x6e, 0x67, 0x69, 0x74, 0x75, 0x64, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x02,
	0x52, 0x09, 0x6c, 0x6f, 0x6e, 0x67, 0x69, 0x74, 0x75, 0x64, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x6c,
	0x61, 0x74, 0x69, 0x74, 0x75, 0x64, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x02, 0x52, 0x08, 0x6c,
	0x61, 0x74, 0x69, 0x74, 0x75, 0x64, 0x65, 0x12, 0x28, 0x0a, 0x0f, 0x6c, 0x6f, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0f, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73,
	0x73, 0x12, 0x1c, 0x0a, 0x09, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x50, 0x61, 0x74, 0x68, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x50, 0x61, 0x74, 0x68, 0x12,
	0x14, 0x0a, 0x05, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05,
	0x6f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x3d, 0x0a, 0x06, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74, 0x18,
	0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x4b,
	0x65, 0x79, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x06, 0x73, 0x65,
	0x63, 0x72, 0x65, 0x74, 0x22, 0x59, 0x0a, 0x1d, 0x4b, 0x65, 0x79, 0x50, 0x6f, 0x69, 0x6e, 0x74,
	0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x43, 0x72, 0x65, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x06, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x73, 0x12, 0x20, 0x0a,
	0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22,
	0xe0, 0x02, 0x0a, 0x10, 0x4b, 0x65, 0x79, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x02, 0x69, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x74, 0x6f, 0x75, 0x72, 0x49, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x74, 0x6f, 0x75, 0x72, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x1c, 0x0a, 0x09, 0x6c, 0x6f, 0x6e, 0x67, 0x69, 0x74, 0x75, 0x64, 0x65, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x02, 0x52, 0x09, 0x6c, 0x6f, 0x6e, 0x67, 0x69, 0x74, 0x75, 0x64, 0x65,
	0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x61, 0x74, 0x69, 0x74, 0x75, 0x64, 0x65, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x02, 0x52, 0x08, 0x6c, 0x61, 0x74, 0x69, 0x74, 0x75, 0x64, 0x65, 0x12, 0x28, 0x0a, 0x0f,
	0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x41,
	0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x50,
	0x61, 0x74, 0x68, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x69, 0x6d, 0x61, 0x67, 0x65,
	0x50, 0x61, 0x74, 0x68, 0x12, 0x14, 0x0a, 0x05, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x18, 0x09, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x05, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x1e, 0x0a, 0x0a, 0x68, 0x61,
	0x76, 0x65, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a,
	0x68, 0x61, 0x76, 0x65, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x12, 0x36, 0x0a, 0x06, 0x73, 0x65,
	0x63, 0x72, 0x65, 0x74, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x73, 0x65, 0x72,
	0x76, 0x65, 0x72, 0x2e, 0x4b, 0x65, 0x79, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x53, 0x65, 0x63, 0x72,
	0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x06, 0x73, 0x65, 0x63, 0x72,
	0x65, 0x74, 0x22, 0x52, 0x0a, 0x16, 0x4b, 0x65, 0x79, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x53, 0x65,
	0x63, 0x72, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16, 0x0a, 0x06,
	0x69, 0x6d, 0x61, 0x67, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x06, 0x69, 0x6d,
	0x61, 0x67, 0x65, 0x73, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x2c, 0x0a, 0x12, 0x4b, 0x65, 0x79, 0x50, 0x6f, 0x69,
	0x6e, 0x74, 0x73, 0x49, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06,
	0x74, 0x6f, 0x75, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x74, 0x6f,
	0x75, 0x72, 0x49, 0x64, 0x22, 0x4e, 0x0a, 0x14, 0x4b, 0x65, 0x79, 0x50, 0x6f, 0x69, 0x6e, 0x74,
	0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x36, 0x0a, 0x09,
	0x6b, 0x65, 0x79, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x18, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x4b, 0x65, 0x79, 0x50, 0x6f, 0x69, 0x6e,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x09, 0x6b, 0x65, 0x79, 0x50, 0x6f,
	0x69, 0x6e, 0x74, 0x73, 0x22, 0x23, 0x0a, 0x11, 0x4b, 0x65, 0x79, 0x50, 0x6f, 0x69, 0x6e, 0x74,
	0x49, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x22, 0xaf, 0x02, 0x0a, 0x13, 0x54, 0x6f,
	0x75, 0x72, 0x43, 0x72, 0x65, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69,
	0x64, 0x12, 0x1a, 0x0a, 0x08, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x49, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x08, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x49, 0x64, 0x12, 0x12, 0x0a,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x1e, 0x0a, 0x0a, 0x64, 0x69, 0x66, 0x66, 0x69, 0x63, 0x75, 0x6c, 0x74,
	0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x64, 0x69, 0x66, 0x66, 0x69, 0x63, 0x75,
	0x6c, 0x74, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x61, 0x67, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28,
	0x09, 0x52, 0x04, 0x74, 0x61, 0x67, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12,
	0x14, 0x0a, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x02, 0x52, 0x05,
	0x70, 0x72, 0x69, 0x63, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x69, 0x73, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x69, 0x73, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x18,
	0x0a, 0x20, 0x01, 0x28, 0x02, 0x52, 0x08, 0x64, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x12,
	0x1a, 0x0a, 0x08, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x18, 0x0b, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x08, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x22, 0x83, 0x04, 0x0a, 0x0c,
	0x54, 0x6f, 0x75, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1a, 0x0a, 0x08,
	0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08,
	0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b,
	0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1e,
	0x0a, 0x0a, 0x64, 0x69, 0x66, 0x66, 0x69, 0x63, 0x75, 0x6c, 0x74, 0x79, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x0a, 0x64, 0x69, 0x66, 0x66, 0x69, 0x63, 0x75, 0x6c, 0x74, 0x79, 0x12, 0x12,
	0x0a, 0x04, 0x74, 0x61, 0x67, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x09, 0x52, 0x04, 0x74, 0x61,
	0x67, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x72,
	0x69, 0x63, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x02, 0x52, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65,
	0x12, 0x1c, 0x0a, 0x09, 0x69, 0x73, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x18, 0x09, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x09, 0x69, 0x73, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x12, 0x1a,
	0x0a, 0x08, 0x64, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x02,
	0x52, 0x08, 0x64, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x3c, 0x0a, 0x0b, 0x70, 0x75,
	0x62, 0x6c, 0x69, 0x73, 0x68, 0x44, 0x61, 0x74, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0b, 0x70, 0x75, 0x62,
	0x6c, 0x69, 0x73, 0x68, 0x44, 0x61, 0x74, 0x65, 0x12, 0x3c, 0x0a, 0x0b, 0x61, 0x72, 0x63, 0x68,
	0x69, 0x76, 0x65, 0x44, 0x61, 0x74, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0b, 0x61, 0x72, 0x63, 0x68, 0x69,
	0x76, 0x65, 0x44, 0x61, 0x74, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f,
	0x72, 0x79, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f,
	0x72, 0x79, 0x12, 0x24, 0x0a, 0x0d, 0x61, 0x76, 0x65, 0x72, 0x61, 0x67, 0x65, 0x52, 0x61, 0x74,
	0x69, 0x6e, 0x67, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0d, 0x61, 0x76, 0x65, 0x72, 0x61,
	0x67, 0x65, 0x52, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x12, 0x37, 0x0a, 0x09, 0x65, 0x71, 0x75, 0x69,
	0x70, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x0f, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x73, 0x65,
	0x72, 0x76, 0x65, 0x72, 0x2e, 0x45, 0x71, 0x75, 0x69, 0x70, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x09, 0x65, 0x71, 0x75, 0x69, 0x70, 0x6d, 0x65, 0x6e,
	0x74, 0x22, 0x2c, 0x0a, 0x0e, 0x54, 0x6f, 0x75, 0x72, 0x73, 0x49, 0x64, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x49, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x49, 0x64, 0x22,
	0x3e, 0x0a, 0x10, 0x54, 0x6f, 0x75, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x2a, 0x0a, 0x05, 0x74, 0x6f, 0x75, 0x72, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x14, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x54, 0x6f, 0x75, 0x72,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x05, 0x74, 0x6f, 0x75, 0x72, 0x73, 0x22,
	0x1f, 0x0a, 0x0d, 0x54, 0x6f, 0x75, 0x72, 0x49, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64,
	0x22, 0x58, 0x0a, 0x1c, 0x54, 0x6f, 0x75, 0x72, 0x45, 0x71, 0x75, 0x69, 0x70, 0x6d, 0x65, 0x6e,
	0x74, 0x43, 0x72, 0x65, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x16, 0x0a, 0x06, 0x74, 0x6f, 0x75, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x06, 0x74, 0x6f, 0x75, 0x72, 0x49, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x65, 0x71, 0x75, 0x69,
	0x70, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x65,
	0x71, 0x75, 0x69, 0x70, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x22, 0x24, 0x0a, 0x12, 0x45, 0x71,
	0x75, 0x69, 0x70, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64,
	0x22, 0x34, 0x0a, 0x1a, 0x54, 0x6f, 0x75, 0x72, 0x45, 0x71, 0x75, 0x69, 0x70, 0x6d, 0x65, 0x6e,
	0x74, 0x4c, 0x69, 0x73, 0x74, 0x49, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16,
	0x0a, 0x06, 0x74, 0x6f, 0x75, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06,
	0x74, 0x6f, 0x75, 0x72, 0x49, 0x64, 0x22, 0x50, 0x0a, 0x15, 0x45, 0x71, 0x75, 0x69, 0x70, 0x6d,
	0x65, 0x6e, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x37, 0x0a, 0x09, 0x65, 0x71, 0x75, 0x69, 0x70, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x19, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x45, 0x71, 0x75, 0x69,
	0x70, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x09, 0x65,
	0x71, 0x75, 0x69, 0x70, 0x6d, 0x65, 0x6e, 0x74, 0x22, 0x50, 0x0a, 0x18, 0x45, 0x71, 0x75, 0x69,
	0x70, 0x6d, 0x65, 0x6e, 0x74, 0x43, 0x72, 0x65, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64,
	0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x59, 0x0a, 0x11, 0x45, 0x71,
	0x75, 0x69, 0x70, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12,
	0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x58, 0x0a, 0x1c, 0x54, 0x6f, 0x75, 0x72, 0x45, 0x71, 0x75,
	0x69, 0x70, 0x6d, 0x65, 0x6e, 0x74, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x74, 0x6f, 0x75, 0x72, 0x49, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x74, 0x6f, 0x75, 0x72, 0x49, 0x64, 0x12, 0x20, 0x0a,
	0x0b, 0x65, 0x71, 0x75, 0x69, 0x70, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x0b, 0x65, 0x71, 0x75, 0x69, 0x70, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x22,
	0x07, 0x0a, 0x05, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x32, 0xd7, 0x09, 0x0a, 0x10, 0x54, 0x6f, 0x75,
	0x72, 0x4d, 0x69, 0x63, 0x72, 0x6f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x5b, 0x0a,
	0x10, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63,
	0x65, 0x12, 0x25, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x54, 0x6f, 0x75, 0x72, 0x50,
	0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x43, 0x72, 0x65, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65,
	0x72, 0x2e, 0x54, 0x6f, 0x75, 0x72, 0x50, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x52, 0x0a, 0x0d, 0x47, 0x65,
	0x74, 0x50, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x12, 0x1f, 0x2e, 0x73, 0x65,
	0x72, 0x76, 0x65, 0x72, 0x2e, 0x54, 0x6f, 0x75, 0x72, 0x50, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65,
	0x6e, 0x63, 0x65, 0x49, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x73,
	0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x54, 0x6f, 0x75, 0x72, 0x50, 0x72, 0x65, 0x66, 0x65, 0x72,
	0x65, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x4d,
	0x0a, 0x0e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x46, 0x61, 0x63, 0x69, 0x6c, 0x69, 0x74, 0x79,
	0x12, 0x1f, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x46, 0x61, 0x63, 0x69, 0x6c, 0x69,
	0x74, 0x79, 0x43, 0x72, 0x65, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x18, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x46, 0x61, 0x63, 0x69, 0x6c,
	0x69, 0x74, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x4f, 0x0a,
	0x10, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x46, 0x61, 0x63, 0x69, 0x6c, 0x69, 0x74, 0x69, 0x65,
	0x73, 0x12, 0x1b, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x46, 0x61, 0x63, 0x69, 0x6c,
	0x69, 0x74, 0x69, 0x65, 0x73, 0x49, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1c,
	0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x46, 0x61, 0x63, 0x69, 0x6c, 0x69, 0x74, 0x79,
	0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x4d,
	0x0a, 0x0e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4b, 0x65, 0x79, 0x50, 0x6f, 0x69, 0x6e, 0x74,
	0x12, 0x1f, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x4b, 0x65, 0x79, 0x50, 0x6f, 0x69,
	0x6e, 0x74, 0x43, 0x72, 0x65, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x18, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x4b, 0x65, 0x79, 0x50, 0x6f,
	0x69, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x4d, 0x0a,
	0x0f, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x4b, 0x65, 0x79, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x73,
	0x12, 0x1a, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x4b, 0x65, 0x79, 0x50, 0x6f, 0x69,
	0x6e, 0x74, 0x73, 0x49, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1c, 0x2e, 0x73,
	0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x4b, 0x65, 0x79, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x4c, 0x69,
	0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x44, 0x0a, 0x0b,
	0x47, 0x65, 0x74, 0x4b, 0x65, 0x79, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x12, 0x19, 0x2e, 0x73, 0x65,
	0x72, 0x76, 0x65, 0x72, 0x2e, 0x4b, 0x65, 0x79, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x49, 0x64, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x18, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e,
	0x4b, 0x65, 0x79, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x00, 0x12, 0x41, 0x0a, 0x0a, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x6f, 0x75, 0x72,
	0x12, 0x1b, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x54, 0x6f, 0x75, 0x72, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x14, 0x2e,
	0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x54, 0x6f, 0x75, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x41, 0x0a, 0x0b, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x54,
	0x6f, 0x75, 0x72, 0x73, 0x12, 0x16, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x54, 0x6f,
	0x75, 0x72, 0x73, 0x49, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x18, 0x2e, 0x73,
	0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x54, 0x6f, 0x75, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x38, 0x0a, 0x07, 0x47, 0x65, 0x74, 0x54,
	0x6f, 0x75, 0x72, 0x12, 0x15, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x54, 0x6f, 0x75,
	0x72, 0x49, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x14, 0x2e, 0x73, 0x65, 0x72,
	0x76, 0x65, 0x72, 0x2e, 0x54, 0x6f, 0x75, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x00, 0x12, 0x49, 0x0a, 0x10, 0x41, 0x64, 0x64, 0x54, 0x6f, 0x75, 0x72, 0x45, 0x71, 0x75,
	0x69, 0x70, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x24, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e,
	0x54, 0x6f, 0x75, 0x72, 0x45, 0x71, 0x75, 0x69, 0x70, 0x6d, 0x65, 0x6e, 0x74, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x0d, 0x2e, 0x73,
	0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x12, 0x57, 0x0a,
	0x10, 0x47, 0x65, 0x74, 0x54, 0x6f, 0x75, 0x72, 0x45, 0x71, 0x75, 0x69, 0x70, 0x6d, 0x65, 0x6e,
	0x74, 0x12, 0x22, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x54, 0x6f, 0x75, 0x72, 0x45,
	0x71, 0x75, 0x69, 0x70, 0x6d, 0x65, 0x6e, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x49, 0x64, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x45,
	0x71, 0x75, 0x69, 0x70, 0x6d, 0x65, 0x6e, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x4c, 0x0a, 0x13, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x54, 0x6f, 0x75, 0x72, 0x45, 0x71, 0x75, 0x69, 0x70, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x24, 0x2e,
	0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x54, 0x6f, 0x75, 0x72, 0x45, 0x71, 0x75, 0x69, 0x70,
	0x6d, 0x65, 0x6e, 0x74, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x0d, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x45, 0x6d, 0x70,
	0x74, 0x79, 0x22, 0x00, 0x12, 0x50, 0x0a, 0x0f, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x45, 0x71,
	0x75, 0x69, 0x70, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x20, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72,
	0x2e, 0x45, 0x71, 0x75, 0x69, 0x70, 0x6d, 0x65, 0x6e, 0x74, 0x43, 0x72, 0x65, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x19, 0x2e, 0x73, 0x65, 0x72, 0x76,
	0x65, 0x72, 0x2e, 0x45, 0x71, 0x75, 0x69, 0x70, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x41, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c,
	0x45, 0x71, 0x75, 0x69, 0x70, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x0d, 0x2e, 0x73, 0x65, 0x72, 0x76,
	0x65, 0x72, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x1d, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65,
	0x72, 0x2e, 0x45, 0x71, 0x75, 0x69, 0x70, 0x6d, 0x65, 0x6e, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x47, 0x0a, 0x0c, 0x47, 0x65, 0x74,
	0x45, 0x71, 0x75, 0x69, 0x70, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x1a, 0x2e, 0x73, 0x65, 0x72, 0x76,
	0x65, 0x72, 0x2e, 0x45, 0x71, 0x75, 0x69, 0x70, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x19, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x45,
	0x71, 0x75, 0x69, 0x70, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x00, 0x42, 0x09, 0x5a, 0x07, 0x2f, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x62, 0x06, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_tourMicroservice_proto_rawDescOnce sync.Once
	file_tourMicroservice_proto_rawDescData = file_tourMicroservice_proto_rawDesc
)

func file_tourMicroservice_proto_rawDescGZIP() []byte {
	file_tourMicroservice_proto_rawDescOnce.Do(func() {
		file_tourMicroservice_proto_rawDescData = protoimpl.X.CompressGZIP(file_tourMicroservice_proto_rawDescData)
	})
	return file_tourMicroservice_proto_rawDescData
}

var file_tourMicroservice_proto_msgTypes = make([]protoimpl.MessageInfo, 27)
var file_tourMicroservice_proto_goTypes = []interface{}{
	(*TourPreferenceCreationRequest)(nil), // 0: server.TourPreferenceCreationRequest
	(*TourPreferenceResponse)(nil),        // 1: server.TourPreferenceResponse
	(*TourPreferenceIdRequest)(nil),       // 2: server.TourPreferenceIdRequest
	(*FacilityCreationRequest)(nil),       // 3: server.FacilityCreationRequest
	(*FacilityResponse)(nil),              // 4: server.FacilityResponse
	(*FacilitiesIdRequest)(nil),           // 5: server.FacilitiesIdRequest
	(*FacilityListResponse)(nil),          // 6: server.FacilityListResponse
	(*KeyPointCreationRequest)(nil),       // 7: server.KeyPointCreationRequest
	(*KeyPointSecretCreationRequest)(nil), // 8: server.KeyPointSecretCreationRequest
	(*KeyPointResponse)(nil),              // 9: server.KeyPointResponse
	(*KeyPointSecretResponse)(nil),        // 10: server.KeyPointSecretResponse
	(*KeyPointsIdRequest)(nil),            // 11: server.KeyPointsIdRequest
	(*KeyPointListResponse)(nil),          // 12: server.KeyPointListResponse
	(*KeyPointIdRequest)(nil),             // 13: server.KeyPointIdRequest
	(*TourCreationRequest)(nil),           // 14: server.TourCreationRequest
	(*TourResponse)(nil),                  // 15: server.TourResponse
	(*ToursIdRequest)(nil),                // 16: server.ToursIdRequest
	(*TourListResponse)(nil),              // 17: server.TourListResponse
	(*TourIdRequest)(nil),                 // 18: server.TourIdRequest
	(*TourEquipmentCreationRequest)(nil),  // 19: server.TourEquipmentCreationRequest
	(*EquipmentIdRequest)(nil),            // 20: server.EquipmentIdRequest
	(*TourEquipmentListIdRequest)(nil),    // 21: server.TourEquipmentListIdRequest
	(*EquipmentListResponse)(nil),         // 22: server.EquipmentListResponse
	(*EquipmentCreationRequest)(nil),      // 23: server.EquipmentCreationRequest
	(*EquipmentResponse)(nil),             // 24: server.EquipmentResponse
	(*TourEquipmentDeletionRequest)(nil),  // 25: server.TourEquipmentDeletionRequest
	(*Empty)(nil),                         // 26: server.Empty
	(*timestamppb.Timestamp)(nil),         // 27: google.protobuf.Timestamp
}
var file_tourMicroservice_proto_depIdxs = []int32{
	4,  // 0: server.FacilityListResponse.facilities:type_name -> server.FacilityResponse
	8,  // 1: server.KeyPointCreationRequest.secret:type_name -> server.KeyPointSecretCreationRequest
	10, // 2: server.KeyPointResponse.secret:type_name -> server.KeyPointSecretResponse
	9,  // 3: server.KeyPointListResponse.keyPoints:type_name -> server.KeyPointResponse
	27, // 4: server.TourResponse.publishDate:type_name -> google.protobuf.Timestamp
	27, // 5: server.TourResponse.archiveDate:type_name -> google.protobuf.Timestamp
	24, // 6: server.TourResponse.equipment:type_name -> server.EquipmentResponse
	15, // 7: server.TourListResponse.tours:type_name -> server.TourResponse
	24, // 8: server.EquipmentListResponse.equipment:type_name -> server.EquipmentResponse
	0,  // 9: server.TourMicroservice.CreatePreference:input_type -> server.TourPreferenceCreationRequest
	2,  // 10: server.TourMicroservice.GetPreference:input_type -> server.TourPreferenceIdRequest
	3,  // 11: server.TourMicroservice.CreateFacility:input_type -> server.FacilityCreationRequest
	5,  // 12: server.TourMicroservice.GetAllFacilities:input_type -> server.FacilitiesIdRequest
	7,  // 13: server.TourMicroservice.CreateKeyPoint:input_type -> server.KeyPointCreationRequest
	11, // 14: server.TourMicroservice.GetAllKeyPoints:input_type -> server.KeyPointsIdRequest
	13, // 15: server.TourMicroservice.GetKeyPoint:input_type -> server.KeyPointIdRequest
	14, // 16: server.TourMicroservice.CreateTour:input_type -> server.TourCreationRequest
	16, // 17: server.TourMicroservice.GetAllTours:input_type -> server.ToursIdRequest
	18, // 18: server.TourMicroservice.GetTour:input_type -> server.TourIdRequest
	19, // 19: server.TourMicroservice.AddTourEquipment:input_type -> server.TourEquipmentCreationRequest
	21, // 20: server.TourMicroservice.GetTourEquipment:input_type -> server.TourEquipmentListIdRequest
	25, // 21: server.TourMicroservice.DeleteTourEquipment:input_type -> server.TourEquipmentDeletionRequest
	23, // 22: server.TourMicroservice.CreateEquipment:input_type -> server.EquipmentCreationRequest
	26, // 23: server.TourMicroservice.GetAllEquipment:input_type -> server.Empty
	20, // 24: server.TourMicroservice.GetEquipment:input_type -> server.EquipmentIdRequest
	1,  // 25: server.TourMicroservice.CreatePreference:output_type -> server.TourPreferenceResponse
	1,  // 26: server.TourMicroservice.GetPreference:output_type -> server.TourPreferenceResponse
	4,  // 27: server.TourMicroservice.CreateFacility:output_type -> server.FacilityResponse
	6,  // 28: server.TourMicroservice.GetAllFacilities:output_type -> server.FacilityListResponse
	9,  // 29: server.TourMicroservice.CreateKeyPoint:output_type -> server.KeyPointResponse
	12, // 30: server.TourMicroservice.GetAllKeyPoints:output_type -> server.KeyPointListResponse
	9,  // 31: server.TourMicroservice.GetKeyPoint:output_type -> server.KeyPointResponse
	15, // 32: server.TourMicroservice.CreateTour:output_type -> server.TourResponse
	17, // 33: server.TourMicroservice.GetAllTours:output_type -> server.TourListResponse
	15, // 34: server.TourMicroservice.GetTour:output_type -> server.TourResponse
	26, // 35: server.TourMicroservice.AddTourEquipment:output_type -> server.Empty
	22, // 36: server.TourMicroservice.GetTourEquipment:output_type -> server.EquipmentListResponse
	26, // 37: server.TourMicroservice.DeleteTourEquipment:output_type -> server.Empty
	24, // 38: server.TourMicroservice.CreateEquipment:output_type -> server.EquipmentResponse
	22, // 39: server.TourMicroservice.GetAllEquipment:output_type -> server.EquipmentListResponse
	24, // 40: server.TourMicroservice.GetEquipment:output_type -> server.EquipmentResponse
	25, // [25:41] is the sub-list for method output_type
	9,  // [9:25] is the sub-list for method input_type
	9,  // [9:9] is the sub-list for extension type_name
	9,  // [9:9] is the sub-list for extension extendee
	0,  // [0:9] is the sub-list for field type_name
}

func init() { file_tourMicroservice_proto_init() }
func file_tourMicroservice_proto_init() {
	if File_tourMicroservice_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_tourMicroservice_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TourPreferenceCreationRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tourMicroservice_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TourPreferenceResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tourMicroservice_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TourPreferenceIdRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tourMicroservice_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FacilityCreationRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tourMicroservice_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FacilityResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tourMicroservice_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FacilitiesIdRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tourMicroservice_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FacilityListResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tourMicroservice_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*KeyPointCreationRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tourMicroservice_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*KeyPointSecretCreationRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tourMicroservice_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*KeyPointResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tourMicroservice_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*KeyPointSecretResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tourMicroservice_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*KeyPointsIdRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tourMicroservice_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*KeyPointListResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tourMicroservice_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*KeyPointIdRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tourMicroservice_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TourCreationRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tourMicroservice_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TourResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tourMicroservice_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ToursIdRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tourMicroservice_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TourListResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tourMicroservice_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TourIdRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tourMicroservice_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TourEquipmentCreationRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tourMicroservice_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EquipmentIdRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tourMicroservice_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TourEquipmentListIdRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tourMicroservice_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EquipmentListResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tourMicroservice_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EquipmentCreationRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tourMicroservice_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EquipmentResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tourMicroservice_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TourEquipmentDeletionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tourMicroservice_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Empty); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_tourMicroservice_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   27,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_tourMicroservice_proto_goTypes,
		DependencyIndexes: file_tourMicroservice_proto_depIdxs,
		MessageInfos:      file_tourMicroservice_proto_msgTypes,
	}.Build()
	File_tourMicroservice_proto = out.File
	file_tourMicroservice_proto_rawDesc = nil
	file_tourMicroservice_proto_goTypes = nil
	file_tourMicroservice_proto_depIdxs = nil
}
